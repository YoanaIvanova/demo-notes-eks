name: Build Docker images

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build-spring-api:
    name: Build Spring Boot backend API
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11 for Spring Boot app
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Build Spring Boot app with Maven
      run: mvn --file ./api/pom.xml --batch-mode --update-snapshots package
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build, tag and push the Spring Boot API Docker image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.AWS_REPO_SPRING }}
      run: |
        docker build -f ./api/Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:latest ./api
        echo "Pushing Spring Boot app image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

  build-react-client:
    name: Build React frontend client
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Node.js for React client
      uses: actions/setup-node@v3
      with:
        node-version: '18.2.0'
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'
    - run: npm install
      working-directory: frontend
    - run: npm run build
      working-directory: frontend
      env:
        CI: false
    - run: npm test
      working-directory: frontend
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build, tag and push the React client Docker image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.AWS_REPO_REACT }}
      run: |
        docker build -f ./frontend/Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:latest ./frontend
        echo "Pushing Spring Boot app image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest